name: Release Workflow
on:
  create:
    branches: [ 'release/**', 'hotfix/**' ]
  push:
    branches: [ 'release/**', 'hotfix/**' ]
    paths-ignore:
      - 'CHANGELOG.md'

permissions:
  contents: write

jobs:
  release-setup:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '24'

      - name: Configure Git
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: Setup release (only on branch creation)
        if: github.event_name == 'create'
        shell: bash
        run: |
          BRANCH="${GITHUB_REF_NAME}"
          VERSION="${BRANCH#*/}"
          KIND="${BRANCH%%/*}"
          
          echo "Setting up release for $BRANCH with version $VERSION"
          
          # Atualiza versão no pom.xml
          mvn -q versions:set -DnewVersion="$VERSION" -DprocessAllModules=true -DgenerateBackupPoms=false
          mvn -q versions:commit
          
          # Cria tag âncora
          BASE_TAG="$KIND-base/$VERSION"
          git tag -a "$BASE_TAG" -m "base of $BRANCH at creation"
          
          # Faz commit de todas as mudanças de uma vez
          git add -A
          git commit -m "chore: setup release $VERSION

          - Set version $VERSION in pom.xml
          - Create anchor tag $BASE_TAG" || echo "no changes to commit"
          
          # Push da branch e da tag
          git push origin HEAD:"$BRANCH"
          git push origin "$BASE_TAG"

      - name: Update changelog (on push events)
        if: github.event_name == 'push'
        shell: bash
        run: |
          BRANCH="${GITHUB_REF_NAME}"
          KIND="${BRANCH%%/*}"
          
          # Instala conventional-changelog-cli
          npm install -g conventional-changelog-cli
          
          # Gera changelog desde a tag âncora
          TAG_PREFIX="$KIND-base/"
          conventional-changelog -p angular -i CHANGELOG.md -s --tag-prefix="$TAG_PREFIX"
          
          # Commit do changelog se houver mudanças
          if ! git diff --quiet CHANGELOG.md; then
            git add CHANGELOG.md
            git commit -m "docs(changelog): update for ${BRANCH} [skip ci]"
            git push origin HEAD:"$BRANCH"
          else
            echo "No changes in CHANGELOG.md"
          fi
