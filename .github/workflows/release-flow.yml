name: release-flow
on:
  create: { branches: [ 'release/*','hotfix/*' ] }
  push: { branches: [ 'release/*','hotfix/*' ] }

concurrency: { group: rel-${ { github.ref } }, cancel-in-progress: true }
permissions: { contents: write, packages: write }

env:
  REGISTRY: ghcr.io
  IMAGE: ${{ github.repository_owner }} /semantic-versioning-poc

jobs:
  anchor_or_build:
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, '[skip ci]')"    # evita loop
    steps:
      - uses: actions/checkout@v4
        with: { fetch-depth: 0 }

      - uses: actions/setup-java@v4
        with: { distribution: temurin, java-version: '24' }

      - uses: actions/setup-node@v4
        with: { node-version: '22' }

      - run: npm install -g conventional-changelog-cli@2 conventional-changelog-angular@6

      - name: Detect first-time (create) or push
        id: mode
        run: echo "create=$([[ '${{ github.event_name }}' == 'create' ]] && echo 1 || echo 0)" >>"$GITHUB_OUTPUT"

      # ─────── anchor (só 1ª vez) ─────────────────────────────────
      - name: Anchor – bump X.Y.0 / tag
        if: steps.mode.outputs.create == '1'
        run: |
          BR=${GITHUB_REF_NAME}               # release/1.5.0
          VER=${BR#*/}                        # 1.5.0
          KIND=${BR%%/*}                      # release|hotfix

          mvn -q versions:set -DnewVersion="$VER" -DprocessAllModules=true -DgenerateBackupPoms=false
          mvn -q versions:commit

          npx conventional-changelog -p angular -i CHANGELOG.md -s -r 0 --tag-prefix "${KIND}-base/"
          git config user.name bot && git config user.email bot@local
          git add -A
          git commit -m "chore: init $VER & changelog"
          git tag -a "$KIND-base/$VER" -m anchor
          git push --follow-tags

      # ─────── build + patch bump (todos os pushes) ───────────────
      - name: Compute expected X.Y.N
        if: steps.mode.outputs.create == '0'
        id: ver
        run: |
          BR=${GITHUB_REF_NAME}; BASE=${BR#*/}; KIND=${BR%%/*}
          git fetch --tags --quiet
          COUNT=$(git rev-list --count "$KIND-base/$BASE..HEAD")
          MAJOR=${BASE%%.*}; MINOR=$(echo $BASE|cut -d. -f2)
          echo "exp=$MAJOR.$MINOR.$COUNT" >>"$GITHUB_OUTPUT"
          echo "kind=$KIND"               >>"$GITHUB_OUTPUT"

      - name: Sync pom.xml to X.Y.N
        if: steps.mode.outputs.create == '0'
        id: sync
        run: |
          EXP=${{ steps.ver.outputs.exp }}
          CUR=$(mvn -q -DforceStdout -Dexpression=project.version -DnonRecursive=true help:evaluate)
          if [ "$CUR" != "$EXP" ]; then
            mvn -q versions:set -DnewVersion="$EXP" -DprocessAllModules=true -DgenerateBackupPoms=false
            mvn -q versions:commit
            CHANGED=1
          else CHANGED=0; fi
          echo "changed=$CHANGED" >>"$GITHUB_OUTPUT"

      - name: Update CHANGELOG (anchor..HEAD)
        if: steps.mode.outputs.create == '0'
        run: |
          npx conventional-changelog -p angular -i CHANGELOG.md -s -r 0 --tag-prefix "${{ steps.ver.outputs.kind }}-base/"

      - name: Detect changelog diff
        if: steps.mode.outputs.create == '0'
        id: chg
        run: |
          git diff --quiet CHANGELOG.md && echo "changed=0" >>"$GITHUB_OUTPUT" || echo "changed=1" >>"$GITHUB_OUTPUT"

      - name: Build jar
        if: steps.mode.outputs.create == '0'
        run: mvn -B -DskipTests package

      - uses: docker/login-action@v3
        if: steps.mode.outputs.create == '0'
        with: { registry: ${ { env.REGISTRY } }, username: ${ { github.actor } }, password: ${ { secrets.GITHUB_TOKEN } } }

      - uses: docker/build-push-action@v6
        if: steps.mode.outputs.create == '0'
        with:
          context: .
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE }}:${{ steps.ver.outputs.exp }}

      - name: Commit bump & changelog [skip ci]
        if: steps.mode.outputs.create == '0' && (steps.sync.outputs.changed == '1' || steps.chg.outputs.changed == '1')
        run: |
          git config user.name bot && git config user.email bot@local
          git add -A
          git commit -m "chore(version): ${{ steps.ver.outputs.exp }} [skip ci]" || exit 0
          git push
