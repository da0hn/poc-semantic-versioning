name: release-cut
on:
  push:
    tags: ['v*']   # vX.Y.Z
permissions:
  contents: read
  packages: write
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
env:
  REGISTRY: ghcr.io
jobs:
  release:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        stack: [java, node]
        include:
          - stack: java
            image_name: ${{ github.repository_owner }}/semantic-versioning-poc
          - stack: node
            image_name: ${{ github.repository_owner }}/semantic-versioning-poc
    steps:
      - uses: actions/checkout@v5
        with: { fetch-depth: 0 }

      - name: Derive version from tag
        id: v
        shell: bash
        run: |
          set -euo pipefail
          VER="${GITHUB_REF_NAME#v}"
          echo "ver=$VER" >> "$GITHUB_OUTPUT"

      - uses: actions/setup-java@v4
        if: matrix.stack == 'java'
        with: { distribution: temurin, java-version: '24' }

      - uses: actions/setup-node@v4
        if: matrix.stack == 'node'
        with: { node-version: '22', cache: npm }

      - name: Validate file version == tag
        shell: bash
        run: |
          set -euo pipefail
          if [[ "${{ matrix.stack }}" == "java" ]]; then
            POM_VER=$(mvn -q -DforceStdout -Dexpression=project.version -DnonRecursive=true help:evaluate)
            [[ "$POM_VER" == "${{ steps.v.outputs.ver }}" ]] || { echo "pom.xml=$POM_VER != ${{ steps.v.outputs.ver }}"; exit 1; }
          else
            PKG_VER=$(jq -r '.version' package.json)
            [[ "$PKG_VER" == "${{ steps.v.outputs.ver }}" ]] || { echo "package.json=$PKG_VER != ${{ steps.v.outputs.ver }}"; exit 1; }
          fi

      - name: (Optional) Build artifacts
        run: |
          if [[ "${{ matrix.stack }}" == "java" ]]; then
            mvn -B -DskipTests package || true
          else
            npm ci && npm run build || true
          fi

      - name: Login GHCR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build & Push (X.Y.Z and latest, same digest)
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ matrix.image_name }}:${{ steps.v.outputs.ver }}
            ${{ env.REGISTRY }}/${{ matrix.image_name }}:latest
          labels: |
            org.opencontainers.image.source=${{ github.repository }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.version=${{ steps.v.outputs.ver }}
