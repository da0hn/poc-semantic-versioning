name: ready-for-production
on:
  push:
    branches: [ 'master' ]

permissions:
  contents: write
  packages: write
env:
  REGISTRY: ghcr.io
  IMAGE: ${{ github.repository_owner }}/semantic-versioning-poc

jobs:
  release-merge:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0
          fetch-tags: true

      - uses: actions/setup-node@v4
        with: { node-version: '22' }
      - run: npm i -g conventional-changelog-cli@2 conventional-changelog-angular@6

      - uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '24'

      - id: ver
        run: |
          V=$(mvn -q -DforceStdout -Dexpression=project.version -DnonRecursive=true help:evaluate)
          echo "version=$V" >>"$GITHUB_OUTPUT"

      - name: Create changelog + new tag
        run: |
          VERSION=${{ steps.ver.outputs.version }}
          git config user.name  "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          # informar versão ao conventional-changelog (Maven não tem package.json)
          echo "{\"version\":\"$VERSION\"}" > .version.json

          # gera/atualiza CHANGELOG.md
          npx conventional-changelog -n .changelogrc.js -p conventionalcommits -i CHANGELOG.md -s -r 0 -k .version.json
          git add CHANGELOG.md
          git commit -m "docs(changelog): $VERSION [skip ci]" || true

          # cria tag apontando para ESTE commit
          git tag -a "v$VERSION" -m "release $VERSION"

          # push commit + tag
          git push --follow-tags


      - run: mvn -B -DskipTests package

      - uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE }}:${{ steps.ver.outputs.version }}
            ${{ env.REGISTRY }}/${{ env.IMAGE }}:latest
          labels:
            org.opencontainers.image.source=${{ github.repository }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.created=${{ github.event.head_commit.timestamp }}
            org.opencontainers.image.version=${{ steps.ver.outputs.version }}
