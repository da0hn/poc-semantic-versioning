name: java-release-flow

on:
  create:
    branches: ['release/*', 'hotfix/*']
  push:
    branches: ['release/*', 'hotfix/*']

concurrency:
  group: release-${{ github.ref }}
  cancel-in-progress: true

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository_owner }}/minha-imagem-java

jobs:
  # ───────────────────────────────────────────────────────── anchor
  anchor:
    if: github.event_name == 'create'
    runs-on: ubuntu-latest
    permissions: { contents: write }
    steps:
      - uses: actions/checkout@v4
        with: { fetch-depth: 0 }

      - uses: actions/setup-java@v4
        with: { distribution: temurin, java-version: '24' }

      - uses: actions/setup-node@v4
        with: { node-version: '22' }

      - run: npm install -g conventional-changelog-cli@2 conventional-changelog-angular@6

      - name: bump + changelog + anchor tag
        shell: bash
        run: |
          set -euo pipefail
          BR=${GITHUB_REF_NAME}           # release/1.4.0
          BASE=${BR#*/}                   # 1.4.0
          KIND=${BR%%/*}                  # release|hotfix
          mvn -q versions:set -DnewVersion="$BASE" -DprocessAllModules=true -DgenerateBackupPoms=false
          mvn -q versions:commit
          npx conventional-changelog -p angular -i CHANGELOG.md -s -r 0 --tag-prefix "${KIND}-base/"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git config user.name "github-actions[bot]"
          git add -A
          git commit -m "chore: init $BASE & changelog"
          git tag -a "$KIND-base/$BASE" -m "anchor $BASE"
          git push origin HEAD:"$BR"
          git push origin "$KIND-base/$BASE"

  # ───────────────────────────────────────────────────────── build
  build:
    if: github.event_name == 'push' && !contains(github.event.head_commit.message, '[skip ci]')
    runs-on: ubuntu-latest
    permissions: { contents: write, packages: write }
    steps:
      - uses: actions/checkout@v4
        with: { fetch-depth: 0 }

      - uses: actions/setup-java@v4
        with: { distribution: temurin, java-version: '21' }

      # expected version X.Y.N
      - name: compute expected
        id: ver
        shell: bash
        run: |
          set -euo pipefail
          BR=${GITHUB_REF_NAME}
          BASE=${BR#*/}                     # 1.4.0
          MAJOR=${BASE%%.*}
          MINOR=${BASE#*.}; MINOR=${MINOR%%.*}
          git fetch --tags --quiet
          COUNT=$(git rev-list --count "${BR%%/*}-base/${BASE}..HEAD")
          echo "expected=$MAJOR.$MINOR.$COUNT" >>"$GITHUB_OUTPUT"

      # ensure pom.xml
      - name: sync pom.xml
        id: sync
        shell: bash
        run: |
          set -euo pipefail
          EXP=${{ steps.ver.outputs.expected }}
          CUR=$(mvn -q -DforceStdout -Dexpression=project.version -DnonRecursive=true help:evaluate)
          if [ "$CUR" != "$EXP" ]; then
            mvn -q versions:set -DnewVersion="$EXP" -DprocessAllModules=true -DgenerateBackupPoms=false
            mvn -q versions:commit
            echo "changed=1" >>"$GITHUB_OUTPUT"
          else
            echo "changed=0" >>"$GITHUB_OUTPUT"
          fi

      # changelog
      - uses: actions/setup-node@v4
        with: { node-version: '22' }

      - run: npm install -g conventional-changelog-cli@2 conventional-changelog-angular@6

      - name: update changelog
        shell: bash
        run: |
          KIND=${GITHUB_REF_NAME%%/*}
          npx conventional-changelog -p angular -i CHANGELOG.md -s -r 0 --tag-prefix "${KIND}-base/"

      # detect if changelog changed
      - name: detect changelog diff
        id: chg
        shell: bash
        run: |
          git diff --quiet CHANGELOG.md && echo "changed=0" >>"$GITHUB_OUTPUT" || echo "changed=1" >>"$GITHUB_OUTPUT"

      # build jar
      - run: mvn -B -DskipTests package

      # docker push
      - uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.ver.outputs.expected }}
          labels: |
            org.opencontainers.image.source=${{ github.repository }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.version=${{ steps.ver.outputs.expected }}

      # commit bump + changelog
      - name: commit bump & changelog [skip ci]
        if: steps.sync.outputs.changed == '1' || steps.chg.outputs.changed == '1'
        shell: bash
        run: |
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git config user.name "github-actions[bot]"
          git add -A
          git commit -m "chore(version): ${{ steps.ver.outputs.expected }} [skip ci]" || exit 0
          git push
