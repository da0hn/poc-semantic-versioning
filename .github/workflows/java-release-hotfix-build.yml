name: java-release-hotfix-build

on:
  workflow_run:
    workflows: ["java-anchor"]
    branches: ['release/*', 'hotfix/*']
    types: [completed]
  push:
    branches: ['release/*', 'hotfix/*']

permissions:
  contents: write
  packages: write

concurrency:
  group: release-${{ github.ref }}
  cancel-in-progress: true

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository_owner }}/minha-imagem-java

jobs:
  build:
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with: { fetch-depth: 0 }

      - uses: actions/setup-java@v4
        with: { distribution: temurin, java-version: '24' }

      # 1) vers찾o esperada (patch = commits desde 창ncora)
      - name: Compute expected version
        id: ver
        shell: bash
        run: |
          BR="${GITHUB_REF_NAME}"                  # release/1.3.0
          BASE="${BR#*/}"                          # 1.3.0
          MAJOR="${BASE%%.*}"
          MINOR="${BASE#*.}"
          MINOR="${MINOR%%.*}"
          git fetch --tags --quiet
          COUNT=$(git rev-list --count "${BR%%/*}-base/${BASE}..HEAD")
          echo "expected=$MAJOR.$MINOR.$COUNT" >>"$GITHUB_OUTPUT"

      # 2) garante pom.xml == esperado
      - name: Sync pom.xml
        id: sync
        shell: bash
        run: |
          EXP="${{ steps.ver.outputs.expected }}"
          CUR=$(mvn -q -DforceStdout -Dexpression=project.version -DnonRecursive=true help:evaluate)
          if [ "$CUR" != "$EXP" ]; then
            mvn -q versions:set -DnewVersion="$EXP" -DprocessAllModules=true -DgenerateBackupPoms=false
            mvn -q versions:commit
            echo "changed=1" >>"$GITHUB_OUTPUT"
          else
            echo "changed=0" >>"$GITHUB_OUTPUT"
          fi

      # 3) atualiza CHANGELOG (창ncora..HEAD)
      - name: Update CHANGELOG
        shell: bash
        run: |
          KIND="${GITHUB_REF_NAME%%/*}"
          npx --yes conventional-changelog -p angular -i CHANGELOG.md -s -r 0 \
              --tag-prefix "${KIND}-base/"

      # 4) build jar
      - run: mvn -B -DskipTests package

      # 5) login + push imagem X.Y.N
      - uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.ver.outputs.expected }}
          labels: |
            org.opencontainers.image.source=${{ github.repository }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.version=${{ steps.ver.outputs.expected }}
      - name: Detect CHANGELOG modifications
        id: chlog
        shell: bash
        run: |
          if git diff --quiet -- CHANGELOG.md; then
            echo "changed=0" >>"$GITHUB_OUTPUT"
          else
            echo "changed=1" >>"$GITHUB_OUTPUT"
          fi

      # 6) commit vers찾o + changelog (skip CI)
      - name: Commit bump & changelog [skip ci]
        if: steps.sync.outputs.changed == '1' || steps.chlog.outputs.changed == '1'
        shell: bash
        run: |
          git config user.name  "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add -A
          git commit -m "chore(version): ${{ steps.ver.outputs.expected }} [skip ci]" || exit 0
          git push
